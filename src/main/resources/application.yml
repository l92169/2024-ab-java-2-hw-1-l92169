server:
  port: 8080


spring:
  application:
    name: app
  client:
    upload-url: https://api.imagga.com/v2/uploads
    tags-url: https://api.imagga.com/v2/tags
    api-key: YWNjX2QxNmFlOTFiNzhjNGRlNDo4OTAxMjFjZTA2NjQ5Y2FjMmVkYjNjZGEwNjUwZGVmNg==
  graphql:
    graphiql:
      enabled: true
    path: /graphql
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:15432/homework2
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  data:
    mongodb:
      uri: mongodb://localhost:27017/sender
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 30000
    cache-names: redis-cache
  messages:
    basename: i18n/messages

  liquibase:
    change-log: classpath:db.changelog/master.xml

  web:
    locale: ru_RU

  kafka:
    listener.ack-mode: manual
    bootstrap-servers:
      - localhost:9092
      - localhost:9093
      - localhost:9094
    properties:
      security.protocol: SASL_PLAINTEXT
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";

  cloud:
    zookeeper:
      config.enabled: false
      connect-string: localhost:2181


minio:
  url: http://localhost:9000
  port: 9000
  accessKey: user
  secretKey: password
  secure: false
  bucket: minio-storage
  image-size: 10485760
  ttl: 1


token:
  signing:
    key: AC13E9DC05A0195C9FE3CC6BC81E4729A20AC2DF0AD680A4FAD3D3F961C07F72


resilience4j:
  ratelimiter:
    instances:
      MyRateLimiter:
        limitForPeriod: 1000
        limitRefreshPeriod: 1m
        timeoutDuration: 0
  retry:
    instances:
      MyRerty:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException.BadRequest
          - org.springframework.web.client.HttpClientErrorException.Unauthorized
          - org.springframework.web.client.HttpClientErrorException.NotFound
  circuitbreaker:
    instances:
      MyCircuitBreaker:
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        permittedNumberOfCallsInHalfOpenState: 5
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: 1m

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    shutdown:
      enabled: true
    info:
      env:
        enabled: true
      enabled: true
  endpoints:
    web:
      exposure:
        include: *
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
