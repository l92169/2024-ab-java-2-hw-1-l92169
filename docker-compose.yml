version: '3.8'
services:
#  service-back:
#     image: l1zail/homework_tink:latest
#     ports:
#       - "8181:8080"
#     depends_on:
#       db:
#         condition: service_healthy
#     environment:
#       - SERVER_PORT= 8080
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://db/homework2
  db:
    image: postgres:14.7-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    user: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
      interval: 1s
      timeout: 5s
      retries: 10
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./environment/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - sender-mongodb:/data/db
      - sender-mongo-config:/data/configdb
  redis:
    image: redis:7.2-rc-alpine
    restart: always
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --save 20 1
    volumes:
      - sender-redis:/data
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./enviroment/minio/data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    command: server /data --console-address :9001

volumes:
  db_data:
  sender-redis:
  sender-mongodb:
  sender-mongo-config:
  minio_data:
